name: SQLMesh Bot
run-name: ðŸš€SQLMesh Bot ðŸš€
on:
  pull_request:
    types:
    - synchronize
    - opened

# The latest commit is the one that will be used to create the PR environment and deploy to production
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  sqlmesh:
    name: SQLMesh Actions Workflow
    runs-on: ubuntu-latest
    permissions:
      # Required to access code in PR
      contents: write
      # Required to post comments
      issues: write
      # Required to update check runs
      checks: write
      # Required to merge
      pull-requests: write

    ### only for testing purpose -start
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      ## only for testing purpose -send

    steps:
      - name: Setup Python
        uses: actions/setup-python@v4

      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ github.event.issue.pull_request && github.event.issue.number || github.event.pull_request.number  }}/merge

      - name: Install SQLMesh + Dependencies
        run: pip install -r requirements.txt

      ### only for testing purpose -start
      - name: Connect to PostgreSQL
        run: python client.py
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
      ### only for testing purpose -end

      - name: Run CI/CD Bot
        run: |
          sqlmesh_cicd \
            -p ${{ github.workspace }} \
            github --token ${{ secrets.GITHUB_TOKEN }} \
            run-all \
            --merge-method merge \
            --delete